 /* gap mixins */
@mixin section-xxs {
    margin: $xxs-gap 0;
}
@mixin section-xs {
    margin: $xs-gap 0;
}
@mixin section-s {
    margin: $s-gap 0;
}
@mixin section-m {
    margin: $m-gap 0;
}
@mixin section-l {
    margin: $l-gap 0;
}
@mixin section-xl {
    margin: $xl-gap 0;
}

/* mixin to verically align objects */
@mixin vertical-line {
  &::before {
    content: "";
    display: inline-block;
    vertical-align: middle;
  }
}

/* vertical align objects mixin */
@mixin vmiddle {
  display: inline-block; 
  vertical-align: middle;
}

@mixin triangle($color) {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-bottom: 10px solid $color;
}

/* base properties for pseudo-elements */
@mixin pseudo-props {
  content: "";
  display: inline-block; 
  vertical-align: middle;
  background: $sprite-path;
}

/* clearfix mixin */
@mixin cf {
  &::before {
    content: "";
    display: table;
    clear: both;
  }
}

/* font-size mixin */
@mixin font-size($size: 1, $line: $size * 1.5){
  font-size     : ($size * 10) + px;
  line-height   : ($line * 10) + px;
  font-size     : $size + rem;
  line-height   : $line + rem;
}

// keyframes mixin
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }

  @-moz-keyframes #{$animation-name} {
    @content;
  }

  @-o-keyframes #{$animation-name} {
    @content;
  }

  @keyframes #{$animation-name} {
    @content;
  }
}

// aspect-ratio mixin
@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    display: block;
    content: "";
    width: 100%;
    padding-top: ($height / $width) * 100%;
  }
  
  > .main-foil {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
  }
}

// font-face mixin
@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  $src: null;
  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );
  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}
